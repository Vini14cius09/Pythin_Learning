# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1axgKEhdYBznA6rYeCF2s_IpC1B0IGH-Y
"""

# 1 - Crie um programa para efetuar a leitura de um número inteiro e apresentar o resultado do quadrado deste número.

num = int(input('Digite um número: '))
nuns = (num * num)
print('O qaudrado desse número é: ' , nuns)

print("")
print("=========================================================================================================")
print("")

# 2 - Crie duas variáveis para armazenar seu primeiro nome e sobrenome.
# Em seguida, concatene-as para formar seu nome completo e exiba o resultado.

prim_nome = input('Digite seu primeiro nome: ')
seg_nome = input('Digite seu segundo nome: ')
print('Seu nome é' , prim_nome , seg_nome)

print("")
print("=========================================================================================================")
print("")

# 3 - Peça ao usuário para digitar dois números inteiros e armazene-os em variáveis.
# Realize a concatenação desses números como strings e exiba o resultado.

nun = input('Digite um número: ')
nun1 = input('Digite outro número: ')
print('A junção desses dois numeros formam' , nun + nun1)

print("")
print("=========================================================================================================")
print("")

# 4 - Crie uma variável para armazenar a palavra "Python".
# Em seguida, adicione um número inteiro ao final da palavra usando a concatenação e exiba o resultado.

py = ('Python')
n = 1000
print(py , 'é nota' , n)

print("")
print("=========================================================================================================")
print("")

# 5 - Declare uma variável contendo uma frase.
# Em seguida, peça ao usuário para digitar uma palavra e concatene essa palavra no final da frase. Exiba o resultado.

frase = ('A minha vida é muito')
palavra = input('Digite uma palavra: ')
print(frase , palavra)

print("")
print("=========================================================================================================")
print("")

# 6 - Crie três variáveis para armazenar a quantidade de horas, minutos e segundos.
# Concatene esses valores para formar uma mensagem de tempo no formato "hh:mm:ss".

pergunta = ('As que horas vc saio de casa?')
horas = input('Horas: ')
minutos = input('Minutos: ')
segundos = input('Segundos: ')
resposta = ('Eu sai de casa ás')
print(pergunta)
print(resposta , horas + ':' + minutos + ':' + segundos)

print("")
print("=========================================================================================================")
print("")

# 7 - Declare duas variáveis com números de telefone, incluindo um código de área e o número principal.
# Concatene esses valores para formar um número de telefone completo.

Numarea = input('Número de área: ')
NumDDD = input('Digite sue número de DDD: ')
NumCel = input('Digite seu número de celular: ')
print('Seu número de área, DDD e celular é:' , Numarea ,'(' +NumDDD+ ')' , NumCel)

print("")
print("=========================================================================================================")
print("")

# 8 - Crie uma lista de ingredientes para uma receita.
# Use concatenação para formar uma única string que liste os ingredientes separados por vírgulas.

ingrediente1 = input('Primeiro ingrediente: ')
ingrediente2 = input('Sugundo ingrediente: ')
ingrediente3 = input('terceiro ingrediente: ')
print('Eu preciso de ' + ingrediente1 + ', ' + ingrediente2 + ' e ' + ingrediente3 + '.')

print("")
print("=========================================================================================================")
print("")

# 9 - Peça ao usuário para digitar três adjetivos e armazene-os em variáveis.
# Em seguida, use essas palavras para criar uma frase concatenada que descreve algo interessante.

Adjt = input("Digite um adjetivo: ")
Adjt2 = input("Digite outro adjetivo: ")
Adjt3 = input("digite mais um adjetivo: ")

print('O mundo é muito' , Adjt + ',' , Adjt2 , 'e' , Adjt3 , '.')